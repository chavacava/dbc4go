// Code generated by dbc4go, DO NOT EDIT.
package testdata

// @ensures @old{a} == a
func old1(a any) {
	{ // Open contract scope
		// Function's contracts
		old_1 := a
		defer func() {
			if !(old_1 == a) {
				panic("function didn't ensure @old{a} == a")
			}
		}()
	} // Close contract scope

}

// @ensures @old{a.b} == a
func old2(a any) {
	{ // Open contract scope
		// Function's contracts
		old_1 := a.b
		defer func() {
			if !(old_1 == a) {
				panic("function didn't ensure @old{a.b} == a")
			}
		}()
	} // Close contract scope

}

// @ensures @old{a.b + 1} == a
func old3(a any) {
	{ // Open contract scope
		// Function's contracts
		old_1 := a.b + 1
		defer func() {
			if !(old_1 == a) {
				panic("function didn't ensure @old{a.b + 1} == a")
			}
		}()
	} // Close contract scope

}

// @ensures a == 0 ==> @old{a.b}
func old4(a any) {
	{ // Open contract scope
		// Function's contracts
		old_1 := a.b
		defer func() {
			if !(!(a == 0) || (old_1)) {
				panic("function didn't ensure a == 0 ==> @old{a.b}")
			}
		}()
	} // Close contract scope

}
