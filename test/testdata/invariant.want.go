// Code generated by dbc4go, DO NOT EDIT.
package testdata

// @invariant a > 0
type foo struct {
	a int
}

func (f foo) f() {
	{ // Open contract scope
		// Type invariants
		if !(a > 0) {
			panic("(type invariant) function caller didn't satisfied a > 0")
		}
		defer func() {
			if !(a > 0) {
				panic("(type invariant) function didn't ensure a > 0")
			}
		}()
	} // Close contract scope
}

// Contract:
//   - invariant b != ""
type bar struct {
	b string
}

func (b bar) b() {
	{ // Open contract scope
		// Type invariants
		if !(b != "") {
			panic("(type invariant) function caller didn't satisfied b != \"\"")
		}
		defer func() {
			if !(b != "") {
				panic("(type invariant) function didn't ensure b != \"\"")
			}
		}()
	} // Close contract scope
}
