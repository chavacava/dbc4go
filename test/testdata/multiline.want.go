// Code generated by dbc4go, DO NOT EDIT.
package testdata

// @invariant dummy invariant: /
// true == true
type multilineType struct{}

func (m multilineType) foo() {
	{ // Open contract scope
		// Type invariants
		if !(true == true) {
			panic("(type invariant) function caller didn't satisfied dummy invariant")
		}
		defer func() {
			if !(true == true) {
				panic("(type invariant) function didn't ensure dummy invariant")
			}
		}()
	} // Close contract scope
}

// Contract:
//   - invariant dummy invariant: /
//     true == true
type multilineType2 struct{}

func (m multilineType2) foo() {
	{ // Open contract scope
		// Type invariants
		if !(true == true) {
			panic("(type invariant) function caller didn't satisfied dummy invariant")
		}
		defer func() {
			if !(true == true) {
				panic("(type invariant) function didn't ensure dummy invariant")
			}
		}()
	} // Close contract scope
}

// @requires dummy requirement: /
//
//	true == true
func multilineRaw() {
	{ // Open contract scope
		// Function's contracts
		if !(true == true) {
			panic("function caller didn't satisfied dummy requirement")
		}
	} // Close contract scope

}

// Contract:
//   - ensures dummy clause: /
//     true == false
func multilineStandard() {
	{ // Open contract scope
		// Function's contracts
		defer func() {
			if !(true == false) {
				panic("function didn't ensure dummy clause")
			}
		}()
	} // Close contract scope

}
